#### Install SSL/TLS certificates when platinum license is present
#ES_PATH_CONF="/etc/elasticsearch/ases1" && export ES_PATH_CONF
#/usr/share/elasticsearch/bin/x-pack/setup-passwords auto --url https://localhost:9200

- name: Check if {{ es_ssl_config['ca_folder'] }} folder exists
  file:
    path: "{{ es_ssl_config['ca_folder'] }}"
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0755
  become: yes
  register: es_ssl_folder

- name: Verify if elastic CA keys are present
  stat:
    path: "{{ es_ssl_config['ca_folder'] }}/elastic-ca.p12"
  become: yes
  register: es_ssl_ca_present
  when: es_ssl_folder

- name: Generate SSL/TLS CA Authority (required for platinum license)
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  command: /usr/share/elasticsearch/bin/x-pack/certutil ca --silent -out {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 -pass "{{ es_ssl_config['ca_password'] }}"
  become: yes
  register: elastic_ca
  when: es_platinum_license is defined and es_ssl_config is defined and es_ssl_config['ca_password'] is defined and (not es_ssl_ca_present.stat.exists or es_ssl_config['regen_certs']) and es_version is version_compare('6.3.0', '<')

- name: Generate SSL/TLS CA Authority (required for platinum license)
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  command: /usr/share/elasticsearch/bin/elasticsearch-certutil ca --silent -out {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 -pass "{{ es_ssl_config['ca_password'] }}"
  become: yes
  register: elastic_ca_new
  when: es_platinum_license is defined and es_ssl_config is defined and es_ssl_config['ca_password'] is defined and (not es_ssl_ca_present.stat.exists or es_ssl_config['regen_certs']) and es_version is version_compare('6.3.0', '>=')

- name: "Ensure {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 has the appropriate permissions"
  file:
    path: "{{ es_ssl_config['ca_folder'] }}/elastic-ca.p12"
    state: file
    owner: elasticsearch
    group: elasticsearch
    mode: 0600
  become: yes

- name: Check if /usr/local/share/ca-certificates/local-elastic-ca folder exists
  file:
    path: /usr/local/share/ca-certificates/local-elastic-ca
    state: directory
    owner: root
    group: root
    mode: 0755
  become: yes
  register: es_ca_folder

- name: Check if /usr/local/share/ca-certificates/local-elastic-ca/elastic-ca.crt exists
  stat:
    path: /usr/local/share/ca-certificates/local-elastic-ca/elastic-ca.crt
  become: yes
  register: es_ca_file

- name: Extract CA certificate to the trusted CA folder
  command: openssl pkcs12 -in {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 -clcerts -nokeys -out /usr/local/share/ca-certificates/local-elastic-ca/elastic-ca.crt -passin pass:{{ es_ssl_config['ca_password'] }}
  when: not es_ca_file.stat.exists and es_ssl_config['ca_password'] is defined and (es_ssl_ca_present.stat.exists or elastic_ca.changed or elastic_ca_new.changed)
  become: yes
  register: es_ca_sytem_import_prep

- name: "Ensure /usr/local/share/ca-certificates/local-elastic-ca/elastic-ca.crt has the appropriate permissions"
  file:
    path: "/usr/local/share/ca-certificates/local-elastic-ca/elastic-ca.crt"
    state: file
    owner: root
    group: root
    mode: 0644
  become: yes
  when: es_ca_folder and es_ssl_config['ca_password'] is defined and (not es_ssl_ca_present.stat.exists or elastic_ca.changed)

- name: Add CA certificate to cacerts
  become: yes
  command: update-ca-certificates
  when: es_ca_sytem_import_prep.changed

- name: Verify if elastic Cert keys are present
  stat:
    path: "{{conf_dir}}/ssl/{{ es_ssl_config['dns'] }}.p12"
  become: yes
  register: es_ssl_cert_present

- name: Check if {{conf_dir}}/ssl folder exists
  file:
    path: "{{conf_dir}}/ssl"
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0755
  become: yes
  register: es_ca_folder

- name: Generate SSL/TLS certificate for primary ES (required for platinum license)
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  command: /usr/share/elasticsearch/bin/x-pack/certutil cert --silent --ca {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 --ca-pass "{{ es_ssl_config['ca_password'] }}" --ip {{ es_ssl_config['ip'] }} --dns {{ es_ssl_config['dns'] }},localhost --out {{conf_dir}}/ssl/{{ es_ssl_config['dns'] }}.p12 --pass "{{ p12_password }}"
  become: yes
  register: es_ssl_cert_generated
  when: es_ssl_config is defined and (es_ssl_config['regen_certs'] or not es_ssl_cert_present.stat.exists) and es_version is version_compare('6.3.0', '<')

- name: Generate SSL/TLS certificate for primary ES (required for platinum license)
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  command: /usr/share/elasticsearch/bin/elasticsearch-certutil cert --silent --ca {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 --ca-pass "{{ es_ssl_config['ca_password'] }}" --ip {{ es_ssl_config['ip'] }} --dns {{ es_ssl_config['dns'] }},localhost --out {{conf_dir}}/ssl/{{ es_ssl_config['dns'] }}.p12 --pass "{{ p12_password }}"
  become: yes
  register: es_ssl_cert_generated_new
  when: es_ssl_config is defined and (es_ssl_config['regen_certs'] or not es_ssl_cert_present.stat.exists) and es_version is version_compare('6.3.0', '>=')

- name: "Ensure {{conf_dir}}/ssl/{{ es_ssl_config['dns'] }}.p12 has the appropriate permissions"
  file:
    path: "{{conf_dir}}/ssl/{{ es_ssl_config['dns'] }}.p12"
    state: file
    owner: elasticsearch
    group: elasticsearch
    mode: 0600
  become: yes

- name: Add SSL/TLS keystore password to ES keystore (required for platinum license)
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  shell: echo "{{ es_ssl_config['es_password'] }}" | /usr/share/elasticsearch/bin/elasticsearch-keystore add --silent xpack.security.http.ssl.keystore.secure_password -x --force
  become: yes
  when: es_ssl_cert_generated or es_ssl_cert_generated_new

- name: Add SSL/TLS truststore password to ES keystore (required for platinum license)
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  shell: echo "{{ es_ssl_config['es_password'] }}" | /usr/share/elasticsearch/bin/elasticsearch-keystore add --silent xpack.security.http.ssl.truststore.secure_password -x --force
  become: yes
  when: es_ssl_cert_generated or es_ssl_cert_generated_new

- name: set fact es_http_type to HTTPS
  set_fact: es_http_type=https
  when: es_ssl_cert_generated or es_ssl_cert_generated_new

##################################### Kibana certificates #####################################
- import_tasks: elasticsearch-xpack-ssl-kibana.yml
  when: groups['kibana_machines'] is defined

##################################### Logstash certificates #####################################
- import_tasks: elasticsearch-xpack-ssl-logstash.yml
  when: groups['logstash_machines'] is defined

##################################### Curator certificates #####################################
- import_tasks: elasticsearch-xpack-ssl-curator.yml
  when: groups['curator_machines'] is defined
