- name: Verify if logstash Cert keys are present
  stat:
    path: "{{ es_ssl_config['ca_folder'] }}/ls-{{ item }}.p12"
  become: true
  become_user: elasticsearch
  register: es_ls_ssl_cert_present
  loop: "{{ groups['logstash_machines'] }}"
  when: groups['logstash_machines']

- name: Generate SSL/TLS certificates for Logstash machines
  environment: 
    - ES_PATH_CONF: "{{conf_dir}}"
  command: /usr/share/elasticsearch/bin/x-pack/certutil cert --silent --ca {{ es_ssl_config['ca_folder'] }}/elastic-ca.p12 --ca-pass "{{ es_ssl_config['ca_password'] }}" --ip "{{ hostvars[item.item].ansible_host }}" --dns {{ item.item }},localhost --out {{ es_ssl_config['ca_folder'] }}/ls-{{ item.item }}.p12 --pass "{{ es_ssl_config['es_password'] }}"
  become: true
  become_user: elasticsearch
  when: es_ssl_config is defined and es_ssl_config['regen_certs'] or not item.stat.exists
  # with_items: "{{ es_ls_ssl_cert_present.results }}"
  loop: "{{ es_ls_ssl_cert_present.results }}"

- name: Find logstash certificates in {{ es_ssl_config['ca_folder'] }}
  find:
    paths: "{{ es_ssl_config['ca_folder'] }}"
    patterns: 'ls-.*\.p12'
    use_regex: yes
  register: es_ls_ssl_cert_archives

- debug:
    msg: "Found Logstash certificate p12 files: {{ es_ls_ssl_cert_archives }}"

# Maybe encrypt certificates first as these are not p12 files?
# Generate a private/public key pair
# $ openssl genrsa -out rsa_key.pri 2048; openssl rsa -in rsa_key.pri -out rsa_key.pub -outform PEM -pubout
# Encrypt the string using public key, and store in a file
# $ echo "stockexchange.com" | openssl rsautl -encrypt -inkey rsa_key.pub -pubin -out secret.dat
# Un-encrypt using private key
# $ string=`openssl rsautl -decrypt -inkey rsa_key.pri -in secret.dat `; echo $string
# stockexchange.com

- name: Fetch certificates for Logstash
  fetch:
    src: "{{item.path}}"
    dest: /tmp/certs/
    flat: true
  loop: "{{ es_ls_ssl_cert_archives.files }}"

- name: Fetch CA certificate from primary ES server
  fetch:
    src: /usr/local/share/ca-certificates/local-elastic-ca/elastic-ca.crt
    dest: /tmp/certs/
    flat: true